--- a/drivers/dahdi/xpp/xbus-sysfs.c
+++ b/drivers/dahdi/xpp/xbus-sysfs.c
@@ -396,7 +396,11 @@
 ATTRIBUTE_GROUPS(xbus_dev);
 #endif

+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0)
+static int astribank_match(struct device *dev, const struct device_driver *driver)
+#else
 static int astribank_match(struct device *dev, struct device_driver *driver)
+#endif
 {
 	DBG(DEVICES, "SYSFS MATCH: dev->bus_id = %s, driver->name = %s\n",
 	    dev_name(dev), driver->name);
@@ -765,7 +769,11 @@
 	return len;
 }

+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0)
+static int xpd_match(struct device *dev, const struct device_driver *driver)
+#else
 static int xpd_match(struct device *dev, struct device_driver *driver)
+#endif
 {
 	struct xpd_driver *xpd_driver;
 	xpd_t *xpd;

--- a/drivers/dahdi/dahdi-sysfs.c
+++ b/drivers/dahdi/dahdi-sysfs.c
@@ -42,7 +42,11 @@
 MODULE_PARM_DESC(tools_rootdir,
 		"root directory of all tools paths (default /)");

+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0)
+static int span_match(struct device *dev, const struct device_driver *driver)
+#else
 static int span_match(struct device *dev, struct device_driver *driver)
+#endif
 {
 	return 1;
 }

--- a/drivers/dahdi/dahdi-sysfs-chan.c
+++ b/drivers/dahdi/dahdi-sysfs-chan.c
@@ -220,7 +220,11 @@
 	chan_dbg(DEVICES, chan, "SYSFS\n");
 }

+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 12, 0)
+static int chan_match(struct device *dev, const struct device_driver *driver)
+#else
 static int chan_match(struct device *dev, struct device_driver *driver)
+#endif
 {
 	struct dahdi_chan *chan;

